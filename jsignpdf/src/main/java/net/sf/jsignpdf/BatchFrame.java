/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package net.sf.jsignpdf;

import java.io.File;
import java.util.logging.Level;
import javax.swing.JFileChooser;
import static net.sf.jsignpdf.Constants.LOGGER;
import static net.sf.jsignpdf.Constants.RES;

/**
 *
 * @author jansv
 */
public class BatchFrame extends javax.swing.JFrame {

    private final BasicSignerOptions defaultOptions;
    private final SignerFileChooser fileChooser = new SignerFileChooser();
    private final SignPdfForm parentForm;
    private final BatchFilelistTableModel tableModel;
    private final javax.swing.JFrame infoDialog;
    private String signedFileSuffix = "";

    /**
     * Creates new form BatchFrame
     *
     * @param parent
     * @param anOpts
     * @param parentInfoDialog
     */
    public BatchFrame(java.awt.Frame parent, BasicSignerOptions anOpts, javax.swing.JFrame parentInfoDialog) {
        super();
        tableModel = new BatchFilelistTableModel();
        initComponents();
        defaultOptions = anOpts;
        translateLabels();

        parentForm = (SignPdfForm) parent;
        infoDialog = parentInfoDialog;

        fileChooser.setDialogType(JFileChooser.OPEN_DIALOG);
        fileChooser.setFileFilter(SignerFileChooser.FILEFILTER_PDF);
        fileChooser.setMultiSelectionEnabled(true);

        signedFileSuffix = tfFileSuffix.getText();
    }

    private void translateLabels() {
        setTitle(RES.get("gui.batch.title"));

        RES.setLabelAndMnemonic(lblFileSuffix, "gui.batch.fileSuffix");
        RES.setLabelAndMnemonic(btnAddFiles, "gui.batch.addFiles.button");
        RES.setLabelAndMnemonic(btnRemoveFiles, "gui.batch.removeFiles.button");
        RES.setLabelAndMnemonic(btnSignFiles, "gui.batch.signFiles.button");

        String[] tableColumnNames = {
            RES.get("gui.batch.tableFilelist.path"),
            RES.get("gui.batch.tableFilelist.filename"),
            RES.get("gui.batch.tableFilelist.newname")
        };
        for (int i = 0; i < tableColumnNames.length; i++) {
            tblFileList.getTableHeader().getColumnModel().getColumn(i).setHeaderValue(tableColumnNames[i]);
        }
    }

    private void showFileChooser() {
        fileChooser.setSelectedFile(null);
        if (JFileChooser.APPROVE_OPTION == fileChooser.showDialog(this, null)) {
            File[] chosenFiles = fileChooser.getSelectedFiles();
            tableModel.addFiles(chosenFiles, defaultOptions, signedFileSuffix);
        }
    }

    private void removeSelectedRows() {
        int[] selectedRows = tblFileList.getSelectedRows();
        for (int i = 0; i < selectedRows.length; i++) {
            selectedRows[i] = tblFileList.convertRowIndexToModel(selectedRows[i]);
            tableModel.removeRow(selectedRows[i] - i);  // substract number of already deleted rows from index
        }
    }

    private void signFiles() {
        if (!parentForm.checkCertEncryption()) {
            return;
        }

        infoDialog.setVisible(true);
        infoDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        for (int r = 0; r < tblFileList.getRowCount(); r++) {
            BasicSignerOptions options = tableModel.getOptionsAt(r);
            LOGGER.log(Level.INFO, "Input file: " + options.getInFile());
            LOGGER.log(Level.INFO, "Output file: " + options.getOutFile());
            SignerLogic signerLogic = new SignerLogic(options);
            final Thread tmpST = new Thread(signerLogic);
            tmpST.start();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        scpFileList = new javax.swing.JScrollPane();
        tblFileList = new javax.swing.JTable();
        btnAddFiles = new javax.swing.JButton();
        btnRemoveFiles = new javax.swing.JButton();
        lblFileSuffix = new javax.swing.JLabel();
        tfFileSuffix = new javax.swing.JTextField();
        btnSignFiles = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        tblFileList.setModel(tableModel);
        scpFileList.setViewportView(tblFileList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 100.0;
        gridBagConstraints.weighty = 100.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(scpFileList, gridBagConstraints);

        btnAddFiles.setText("Add files");
        btnAddFiles.setToolTipText("");
        btnAddFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddFilesActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(btnAddFiles, gridBagConstraints);

        btnRemoveFiles.setText("Remove files");
        btnRemoveFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveFilesActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(btnRemoveFiles, gridBagConstraints);

        lblFileSuffix.setText("Suffix of signed files");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(lblFileSuffix, gridBagConstraints);

        tfFileSuffix.setText("_signed");
        tfFileSuffix.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfFileSuffixFocusLost(evt);
            }
        });
        tfFileSuffix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfFileSuffixActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(tfFileSuffix, gridBagConstraints);

        btnSignFiles.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        btnSignFiles.setIcon(new javax.swing.ImageIcon(getClass().getResource("/net/sf/jsignpdf/signedpdf16.png"))); // NOI18N
        btnSignFiles.setText("Sign files");
        btnSignFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignFilesActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(btnSignFiles, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddFilesActionPerformed
        showFileChooser();
    }//GEN-LAST:event_btnAddFilesActionPerformed

    private void btnRemoveFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveFilesActionPerformed
        removeSelectedRows();
    }//GEN-LAST:event_btnRemoveFilesActionPerformed

    private void tfFileSuffixFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfFileSuffixFocusLost
        if (!signedFileSuffix.equals(tfFileSuffix.getText())) {
            signedFileSuffix = tfFileSuffix.getText();
            tableModel.setOutputSuffix(signedFileSuffix);
        }
    }//GEN-LAST:event_tfFileSuffixFocusLost

    private void tfFileSuffixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfFileSuffixActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfFileSuffixActionPerformed

    private void btnSignFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignFilesActionPerformed
        signFiles();
    }//GEN-LAST:event_btnSignFilesActionPerformed

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(BatchFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(BatchFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(BatchFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(BatchFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new BatchFrame().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddFiles;
    private javax.swing.JButton btnRemoveFiles;
    private javax.swing.JButton btnSignFiles;
    private javax.swing.JLabel lblFileSuffix;
    private javax.swing.JScrollPane scpFileList;
    private javax.swing.JTable tblFileList;
    private javax.swing.JTextField tfFileSuffix;
    // End of variables declaration//GEN-END:variables
}
